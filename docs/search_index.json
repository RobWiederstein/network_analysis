[["index.html", "Network Analysis in R Preface 0.1 Why Read this Book 0.2 Purpose 0.3 Collection 0.4 Assumptions", " Network Analysis in R Robert Wiederstein 2020-12-19 Preface 0.1 Why Read this Book Network analysis can be an important strategy for understanding the direction and strength of connections between people, places and ideas. Visual representation of networks can speed the discovery process in working with data. 0.2 Purpose The purpose of this book is to speed the conversion of a traditional dataframe to a network diagram with nodes and vertices. Some discusson of basic computations will be included, but formulas are omitted unless necessary for understanding. Again, the emphasis is on producing insightful graphs of networks whose data was originally stored in a dataframe. Network analysis is not hard, but it relies on different data structures. 0.3 Collection What follows is admittedly not the most original or insightful work on networks. It is an attempt to collect tutorials from disparate packages, software and websites in a single place. Attribution will be given where known. 0.4 Assumptions A working knowledge of R is necessary including how to obtain and load packages and how to manipulate basic data structures like lists and dataframes. Methods and packages in the tidyverse are given priority. "],["intro.html", "Chapter 1 Introduction 1.1 Defined 1.2 Input formats 1.3 R packages", " Chapter 1 Introduction 1.1 Defined “A network is not just a metaphor: it is a precise, mathematical construct of nodes (vertices, actors) N and edges (ties, relations) E that can be directed or undirected.” (Jasney 2018) 1.2 Input formats Building a network graph is confusing because of the number of potential input types. Users must first distinguish whether the input is an adjacency matrix, incidence matrix, or edge list. 1.3 R packages Three R packages are dedicated to network analysis and are available for download from CRAN: igraph, ggraph, and networkD3. You can label chapter and section titles using {#label} after them, e.g., we can reference Chapter 1. If you do not manually label them, there will be automatic labels anyway, e.g., Chapter ??. Figures and tables with captions will be placed in figure and table environments, respectively. par(mar = c(4, 4, .1, .1)) plot(pressure, type = &#39;b&#39;, pch = 19) Figure 1.1: Here is a nice figure! Reference a figure by its code chunk label with the fig: prefix, e.g., see Figure ??. Similarly, you can reference tables generated from knitr::kable(), e.g., see Table 1.1. knitr::kable( head(iris, 20), caption = &#39;Here is a nice table!&#39;, booktabs = TRUE ) Table 1.1: Here is a nice table! Sepal.Length Sepal.Width Petal.Length Petal.Width Species 5.1 3.5 1.4 0.2 setosa 4.9 3.0 1.4 0.2 setosa 4.7 3.2 1.3 0.2 setosa 4.6 3.1 1.5 0.2 setosa 5.0 3.6 1.4 0.2 setosa 5.4 3.9 1.7 0.4 setosa 4.6 3.4 1.4 0.3 setosa 5.0 3.4 1.5 0.2 setosa 4.4 2.9 1.4 0.2 setosa 4.9 3.1 1.5 0.1 setosa 5.4 3.7 1.5 0.2 setosa 4.8 3.4 1.6 0.2 setosa 4.8 3.0 1.4 0.1 setosa 4.3 3.0 1.1 0.1 setosa 5.8 4.0 1.2 0.2 setosa 5.7 4.4 1.5 0.4 setosa 5.4 3.9 1.3 0.4 setosa 5.1 3.5 1.4 0.3 setosa 5.7 3.8 1.7 0.3 setosa 5.1 3.8 1.5 0.3 setosa You can write citations, too. For example, we are using the bookdown package (Xie 2020) in this sample book, which was built on top of R Markdown and knitr (???). References "],["literature.html", "Chapter 2 Literature", " Chapter 2 Literature Here is a review of existing methods. "],["first-graphs.html", "Chapter 3 First Graphs 3.1 Les Miserable Dataset 3.2 Stop light 3.3 Les Miserabe", " Chapter 3 First Graphs 3.1 Les Miserable Dataset # Load igraph library(igraph) # Read data lesmis &lt;- read.csv(&quot;https://raw.githubusercontent.com/meefen/sna-ed/master/assets/lesmis/lesmis.csv&quot;) # check the head (first 6 rows) of the dataset head(lesmis) ## Source Target weight ## 1 1 0 1 ## 2 2 0 8 ## 3 3 0 10 ## 4 3 2 6 ## 5 4 0 1 ## 6 5 0 1 # Create a graph using the graph_from_data_frame function g &lt;- graph_from_data_frame(lesmis) # Plot the graph plot(g) # make the graph a little prettier plot(g, edge.arrow.size=.2, vertex.label=NA, vertex.size=8) 3.2 Stop light library(sigmajs) library(tibble) ## ## Attaching package: &#39;tibble&#39; ## The following object is masked from &#39;package:igraph&#39;: ## ## as_data_frame edges &lt;- tibble(id = rep(&quot;1&quot;, 3), source = rep(&quot;1&quot;, 3), target = as.character(c(2:4)) ) nodes &lt;- tibble(id = as.character(1:4), label = c(&quot;light&quot;, &quot;red&quot;, &quot;yellow&quot;, &quot;green&quot;), time = c(100, 30, 10, 20) ) sigmajs() %&gt;% sg_nodes(nodes, id, label, time) %&gt;% sg_edges(edges, id, source, target) 3.3 Les Miserabe "],["sigma.html", "Chapter 4 Sigma JS 4.1 Stop light", " Chapter 4 Sigma JS #example for ?sigmajs::sigmajs library(sigmajs) nodes &lt;- sg_make_nodes() edges &lt;- sg_make_edges(nodes) sigmajs() %&gt;% sg_nodes(nodes, id, label, size, color) %&gt;% sg_edges(edges, id, source, target) 4.1 Stop light library(sigmajs) library(tibble) edges &lt;- tibble(id = rep(&quot;1&quot;, 3), source = rep(&quot;1&quot;, 3), target = as.character(c(2:4)) ) nodes &lt;- tibble(id = as.character(1:4), label = c(&quot;light&quot;, &quot;red&quot;, &quot;yellow&quot;, &quot;green&quot;), time = c(100, 30, 10, 20) ) sigmajs() %&gt;% sg_nodes(nodes, id, label, time) %&gt;% sg_edges(edges, id, source, target) "],["glossary.html", "Chapter 5 Glossary", " Chapter 5 Glossary Attributes are a characteristic of the node or edge that is often designated by color, size, or shape of the object. For example, a dashed line for an edge or a blue circle for a node. Nodes are also actors or vertices. They are things like people, places, ideas that have some connection. In mathmatical formulas, they often take the variable \\(N\\). Degree the number of nodes adjacent to the node under evaluation or the number of lines incident to it. Diameter is the maximum number of edges. Edges are ties, relations or connections between nodes. Edges are often designated as \\(E\\). Indegree is the number of received ties. Networks Network objects is a class of objects in R designed specifically for network analysis. They store an adjacency matrix or an edgelist as well as metadata. Outdegree the number of sent ties. Directed networks "]]
